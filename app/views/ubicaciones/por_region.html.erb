<% content_for(:extrajs) do %>

    <%= javascript_include_tag 'geodatos/d3.v3.min', 'data-turbolinks-track' => true %>
    <script src="http://d3js.org/topojson.v1.min.js"></script>
    <script src="https://unpkg.com/leaflet@1.2.0/dist/leaflet.js"></script>
    <script src="https://unpkg.com/leaflet.markercluster@1.2.0/dist/leaflet.markercluster.js"></script>
    <%= javascript_include_tag 'geodatos/Control.FullScreen.js', 'data-turbolinks-track' => true %>
    <%= javascript_include_tag 'busquedas_espaciales/topojson', 'data-turbolinks-track' => true %>

    <script data-turbolinks-track="true">

        var cargaMapa = function (id)
        {
            var place = [23.79162789, -102.04376221];
            var tile_url = 'http://{s}.tile.osm.org/{z}/{x}/{y}.png';

            map = L.map(id, {
                zoomControl: false,
                doubleClickZoom: false
            });

            var zoom = L.control.zoom({
                zoomInTitle: 'Acercarse',
                zoomOutTitle: 'Alejarse'
            });

            // https://github.com/brunob/leaflet.fullscreen
            var fullscreen = L.control.fullscreen({
                position: 'topleft',
                title: 'Pantalla completa',
                titleCancel: 'Salir de pantalla completa'
            });

            map.addControl(zoom);
            map.addControl(fullscreen);

            var layer = L.tileLayer(tile_url, {
                attribution: 'OSM',
                noWrap: true
            });

            map.addLayer(layer);
            map.setView(place, 5);  // Default place and zoom
        };

        var cargaRegistros = function(url)
        {
            geojsonMarkerGeoportalOptions = {
                radius: 6,
                fillColor: "#ff0000",
                color: "white",
                weight: 2,
                //opacity: 1,
                fillOpacity: 1
            };

            geojsonMarkerGeoportalAveravesOptions = {
                radius: 5,
                fillColor: "#FFA500",
                color: "black",
                weight: 2,
                opacity: 1,
                fillOpacity: 0.6
            };

            borraRegistrosAnteriores();
            geojsonGeoportal(url);
        };

        var borraRegistrosAnteriores = function()
        {
            if (map.hasLayer(markersLayer))
            {
                map.removeLayer(markersLayer);
                markersLayer = L.markerClusterGroup({ chunkedLoading: true, spiderfyDistanceMultiplier: 2, which_layer: 'geoportal'});
            }
        };

        var aniadePuntosGeoportal = function()
        {
            var geojsonFeature =  { "type": "FeatureCollection", "features": allowedPoints.values()};

            var species_layer = L.geoJson(geojsonFeature, {
                pointToLayer: function (feature, latlng) {
                    // Este campos quiere decir que es de aves aves
                    if (feature.properties.d[1])
                        return L.circleMarker(latlng, geojsonMarkerGeoportalAveravesOptions);
                    //return "<i class='feather-ev-icon'></i>";
                    //else if (fosil != undefined && fosil != "")
                    //  return L.circleMarker(latlng, geojsonMarkerGeoportalFosilOptions);
                    else  // de lo contrario es un registro rojo normal
                        return L.marker(latlng, {icon: L.divIcon({className: 'div-icon-leaflet', html: '<i class="feather-ev-icon"></i>'})});
                },
                onEachFeature: function (prop, layer) {
                    layer.bindPopup(ejemplarSnib(prop.properties.d));
                    layer.on("click", function () {
                        //layer.bindPopup(ejemplarSnib(prop.properties.d));
                    });
                }
            });

            markersLayer.addLayer(species_layer);
            map.addLayer(markersLayer);

            /*
             var punto_rojo = '<svg height="50" width="200"><circle cx="10" cy="10" r="6" stroke="black" stroke-width="1" stroke-opacity="1" fill="#FF0000"/>';
             punto_rojo+= '<text x="20" y="13">Registros del SNIB</text>';

             var punto_naranja = punto_rojo + '<circle cx="10" cy="25" r="6" stroke="black" stroke-width="1" stroke-opacity="1" fill="#FFA500"/>';
             punto_naranja+= '<text x="20" y="28">Registros de AverAves</text>';

             var punto_gris = punto_naranja + '<circle cx="10" cy="40" r="6" stroke="black" stroke-width="1" stroke-opacity="1" fill="#888888"/>';
             punto_gris+= '<text x="20" y="43">Registros de Fósiles</text></svg>';

             legend_control.addOverlay(markersLayer,
             "<b>Registros del SNIB <sub>" + registros_conteo + "</sub><br /> (museos, colectas y proyectos)</b>" +
             "<p>"+punto_naranja+"</p>"
             );*/
        };

        /**
         * Hace una ajax request para la obtener la información de un taxon, esto es más rapido para muchos registros
         * */
        var ejemplarSnibGeojson = function(layer, id)
        {
            $.ajax({
                url: "/especies/" + TAXON.id + "/ejemplar-snib/" + id,
                dataType : "json",
                success : function (res){
                    if (res.estatus == 'OK')
                    {
                        var ejemplar = res.ejemplar;
                        var contenido = "";

                        contenido += "<h4>" + nombre() + "</h4>";
                        contenido += "<dt>Localidad: </dt><dd>" + ejemplar.localidad + "</dd>";
                        contenido += "<dt>Municipio: </dt><dd>" + ejemplar.municipiomapa + "</dd>";
                        contenido += "<dt>Estado: </dt><dd>" + ejemplar.estadomapa + "</dd>";
                        contenido += "<dt>País: </dt><dd>" + ejemplar.paismapa + "</dd>";
                        contenido += "<dt>Fecha: </dt><dd>" + ejemplar.fechacolecta + "</dd>";
                        contenido += "<dt>Colector: </dt><dd>" + ejemplar.colector + "</dd>";
                        contenido += "<dt>Colección: </dt><dd>" + ejemplar.coleccion + "</dd>";
                        contenido += "<dt>Institución: </dt><dd>" + ejemplar.institucion + "</dd>";
                        contenido += "<dt>País de la colección: </dt><dd>" + ejemplar.paiscoleccion + "</dd>";

                        if (ejemplar.proyecto.length > 0 && ejemplar.urlproyecto.length > 0)
                            contenido += "<dt>Proyecto: </dt><dd><a href='" + ejemplar.urlproyecto + "' target='_blank'>" + ejemplar.proyecto + "</a></dd>";

                        contenido += "<dt>Más información: </dt><dd><a href='http://" + ejemplar.urlejemplar + "' target='_blank'>consultar</a></dd>";

                        // Para enviar un comentario acerca de un registro en particular
                        contenido += "<dt>¿Tienes un comentario?: </dt><dd><a href='/especies/" + TAXON.id + "/comentarios/new?proveedor_id=" + ejemplar.idejemplar + "&tipo_proveedor=6' target='_blank'>redactar</a></dd>";

                        contenido = "<dl class='dl-horizontal'>" + contenido + "</dl>" + "<strong>ID: </strong>" + ejemplar.idejemplar;
                    } else {
                        var contenido = "Hubo un error al retraer el ejemplar: " + res.msg;
                    }

                    // Pone el popup arriba del punto
                    var popup = new L.Popup();
                    var bounds = layer.getBounds();

                    popup.setLatLng(bounds.getCenter());
                    popup.setContent(contenido);
                    map.openPopup(popup);
                },
                error: function( jqXHR ,  textStatus,  errorThrown ){
                    console.log("error: " + textStatus);
                    console.log(errorThrown);
                    console.log(jqXHR.responseText);
                }
            });  // termina ajax
        };

        /**
         * Lanza el pop up con la inforamcion del taxon, ya esta cargado; este metodo es lento con muchos registros
         * */
        var ejemplarSnib = function(prop)
        {
            var contenido = "";

            contenido += "<h4 class='text-center'>" + nombre() + "</h4>";
            contenido += "<dt>Localidad: </dt><dd>" + prop.localidad + "</dd>";
            contenido += "<dt>Municipio: </dt><dd>" + prop.municipiomapa + "</dd>";
            contenido += "<dt>Estado: </dt><dd>" + prop.estadomapa + "</dd>";
            contenido += "<dt>País: </dt><dd>" + prop.paismapa + "</dd>";
            contenido += "<dt>Fecha: </dt><dd>" + prop.fechacolecta + "</dd>";
            contenido += "<dt>Colector: </dt><dd>" + prop.colector + "</dd>";
            contenido += "<dt>Colección: </dt><dd>" + prop.coleccion + "</dd>";
            contenido += "<dt>Institución: </dt><dd>" + prop.institucion + "</dd>";
            contenido += "<dt>País de la colección: </dt><dd>" + prop.paiscoleccion + "</dd>";

            if (prop.proyecto.length > 0 && prop.urlproyecto.length > 0)
                contenido += "<dt>Proyecto: </dt><dd><a href='" + prop.urlproyecto + "' target='_blank'>" + prop.proyecto + "</a></dd>";

            contenido += "<dt>Más información: </dt><dd><a href='" + prop.urlejemplar + "' target='_blank'>consultar</a></dd>";

            //Para enviar un comentario acerca de un registro en particular
            contenido += "<dt>¿Tienes un comentario?: </dt><dd><a href='/especies/" + taxon.id + "/comentarios/new?proveedor_id=" + prop.idejemplar + "&tipo_proveedor=6' target='_blank'>redactar</a></dd>";

            return "<dl class='dl-horizontal'>" + contenido + "</dl>" + "<strong>ID SNIB: </strong>" + prop.idejemplar;
        };

        var nombre = function()
        {
            if (I18n.locale == 'es')
            {
                if (taxon.nombre_comun.length > 0)
                    return taxon.nombre_comun.replace(/[0-9]/g, '') + "<br /><a href='/especies/" + taxon.id + "'><i>" + taxon.nombre_cientifico + "</i></a>";
                else
                    return "<a href='/especies/" + taxon.id + "' target='_blank'><i>" + taxon.nombre_cientifico + "</i></a>";
            } else
                return "<a href='/especies/" + taxon.id + "' target='_blank'><i>" + taxon.nombre_cientifico + "</i></a>";
        };

        var geojsonGeoportal = function(url)
        {
            $.ajax({
                url: url,
                dataType : "json",
                success : function (d){
                    registros_conteo = d.length;
                    allowedPoints = d3.map([]);

                    for(var i=0;i<d.length;i++)
                    {
                        var item_id = 'geo-' + i.toString();

                        allowedPoints.set(item_id, {
                            "type"      : "Feature",
                            "properties": {d: d[i]}, // El ID y si es de aver aves
                            "geometry"  : JSON.parse(d[i].json_geom)
                        });
                    }

                    aniadePuntosGeoportal();
                },
                error: function( jqXHR ,  textStatus,  errorThrown ){
                    console.log("error: " + textStatus);
                    console.log(errorThrown);
                    console.log(jqXHR.responseText);
                }
            });  // termina ajax
        };

        var dameUrlCargaGrupos = function(prop)
        {
            switch (prop.tipo_region)
            {
                case 'estado':
                    return 'http://www.enciclovida.mx:9002/taxonEdo/conteo/' + CORRESP[prop.region_id] + '/edomun/aves?apiKey=enciclovida';
                case 'municipio':
                    return 'http://www.enciclovida.mx:9002/taxonMuni/listado/' + prop.parent_id + '/' + prop.region_id + '/edomun/aves?apiKey=enciclovida';
                default:
                    return undefined;
            }
        };

        var dameUrlTopojson = function(prop)
        {
            switch (prop.tipo_region)
            {
                case 'estado':
                    return '/topojson/' + prop.tipo_region + '_' + prop.region_id + '_division_municipal.json';
                case 'municipio':
                    return '/topojson/' + prop.tipo_region + '_' + prop.region_id + '_' + prop.parent_id + '.json';
                default:
                    return undefined;
            }
        };

        var dameUrlServicioSnib = function(prop)
        {
            return 'http://200.12.166.190:9000/snib?qtype=getSpecies&rd=animalia&id='+prop.catalogo_id+'&clayer='+tipo_region_se+'&cvalue='+region_id_se;
        };

        /**
         * Devuelve los parametros de acuerdo a los filtros, grupo y region
         * @param prop
         * @returns {string}
         */
        var parametrosCargaEspecies = function(prop)
        {
            if ($('#region_municipio').val() == '')
            {
                var region_id = CORRESP[$('option:selected', $('#region_estado')).val()];
                var parent_id = '';
            } else {
                var region_id = $('option:selected', $('#region_municipio')).val();
                var parent_id = CORRESP[$('#region_municipio').attr('parent_id')];
            }

            var params_generales = {grupo_id: grupo_id_seleccionado,
                region_id: region_id, parent_id: parent_id};

            if (prop != undefined)
                params_generales = Object.assign({},params_generales, prop);

            return $('#b_avanzada').serialize() + '&' + $.param(params_generales);
        };

        var cargaGrupos = function(properties)
        {
            if (properties.tipo_region == 'estado')
            {
                var region_id = CORRESP[properties.region_id];
                var parent_id = '';
            } else {
                var region_id = properties.region_id;
                var parent_id = properties.parent_id;
            }

            $.ajax({
                url: '/explora-por-region/conteo-por-grupo',
                data: {tipo_region: properties.tipo_region, region_id: region_id, parent_id: parent_id}
            }).done(function(resp) {
                //especies = resp.map(a => a.especievalidabusqueda + '-' + a.nregistros);

                if (resp.estatus)
                {
                    $('#contenedor_grupos').empty();
                    $('#contenedor_especies').empty();

                    $.each(resp.resultados, function(index, prop){
                        $('#contenedor_grupos').append('<label><span title="' + prop.grupo + '" class="grupo_id btn btn-xs btn-basica btn-title" grupo_id="'+prop.grupo+'"><i class="' + prop.icono + '"></i></span></label><sub class="badge" grupo_id_badge="'+ prop.grupo +'">' + prop.total + '</sub>');
                    });
                } else
                    console.log('Falló el servicio de conteo del SNIB');

            }).fail(function() {
                console.log('Falló el servicio de conteo del SNIB');
            });
        };

        var cargaEspecies = function()
        {
            // Pregunta por los datos correspondientes a estas especies en nuestra base, todos deberian coincidir en teoria ya que son ids de catalogos, a excepcion de los nuevos, ya que aún no se actualiza a la base centralizada
            $.ajax({
                url: '/explora-por-region/especies-por-grupo',
                method: 'GET',
                data: parametrosCargaEspecies()
            }).done(function(resp) {
                var cuantos = 0
                if (resp.estatus)  // Para asignar los resultados con o sin filtros
                {
                    //especies_con_filtro = resp.resultados.map(a => a.id);
                    $('#contenedor_especies').empty();

                    $.each(resp.resultados, function(index, taxon){
                        if (taxon.catalogo_id != undefined) {  // Por si algunos de los taxones no coincidieron con catalogos
                            cuantos++;
                            var url = dameUrlServicioSnib({catalogo_id: taxon.catalogo_id});
                            if (url == undefined) return;

                            $('#contenedor_especies').append('<div class="result-img-container">' +
                            '<a href class="especie_id" snib_url="' + url + '" especie_id="' + taxon.id + '"><img src="' + taxon.foto + '"/></a>' +
                            '<div class="result-nombre-container">' +
                            '<h5>' + taxon.nombre_comun + ' <sub class="badge">' + taxon.nregistros + '</sub></h5>' +
                            '<h5><a href class="especie_id"><i>' + taxon.nombre_cientifico + '</i></a></h5>' +
                            '</div>' +
                            '</div>');
                        }

                        $('#grupos').find("[grupo_id_badge='" + grupo_id_seleccionado + "']").text(cuantos);
                    });
                } else
                    console.log(resp.msg);

            }).fail(function() {
                console.log('Falló la carga de especies de enciclovida');
            });
        };

        // Para cuando se hace una animacion con flyTo, los svgs de estatal o municipal o region sola
        var muestraOcultaSvg = function(caso)
        {
            if (caso)
            {
                $('#svg-division-estatal').css('visibility', 'visible');
                $('#svg-division-municipal').css('visibility', 'visible');
                $('#svg-region').css('visibility', 'visible');
            } else {
                $('#svg-division-estatal').css('visibility', 'hidden');
                $('#svg-division-municipal').css('visibility', 'hidden');
                $('#svg-region').css('visibility', 'hidden');
            }
        };

        // Rellena las opciones de region-estado
        var completaSelect = function(prop)
        {
            layer_obj[prop.region_id] = prop.layer;
            $('#region_' + prop.tipo_region).append('<option value="' + prop.region_id +'" bounds="[[' + prop.bounds[0] + '],[' + prop.bounds[1] + ']]" region_id_se="' + prop.region_id_se + '">' + prop.nombre_region + '</option>');
        };

        // Hace la projecccion de los puntos en D3 cuando se hace un zoom
        function projectPoint(x) {
            var point = map.latLngToLayerPoint(new L.LatLng(x[1], x[0]));
            return [point.x, point.y];
        }

        // Carga la division estatal de un inicio
        var cargaDivisionEstatal = function()
        {
            var svg = d3.select(map.getPanes().overlayPane).append('svg').attr('id', 'svg-division-estatal');
            var g = svg.append('g').attr('class', 'leaflet-zoom-hide');

            d3.json('/topojson/estado.json', function (error, collection) {
                var bounds = d3.geo.bounds(topojson.feature(collection, collection.objects['collection']));
                var path = d3.geo.path().projection(projectPoint);

                var feature = g.selectAll('.region')
                        .data(topojson.feature(collection, collection.objects['collection']).features)
                        .enter()
                        .append('path')
                        .attr('class', 'region leaflet-clickable')
                        .on('mouseover', function(d){
                            var name = d.properties.nombre_region;
                            $('#contenedor-nombre-region').html(name);
                        })
                        .on('dblclick', function(d){
                            d.properties.layer = $(this);
                            d.properties.tipo_region = 'estado';
                            d.properties.bounds = d3.geo.bounds(d);
                            cargaRegion(d.properties);

                            $('#region_estado').val(d.properties.region_id);  // Selecciona el estado correspondiente en el select
                            $('#region_municipio').empty().append('<option value>- - - Escoge un municipio - - -</option>');
                            $('#region_municipio').prop('disabled', false).attr('parent_id', d.properties.region_id);
                            layer_obj = {};
                        })
                        .each(function(d){
                            d.properties.layer = $(this);
                            d.properties.tipo_region = 'estado';
                            d.properties.bounds = d3.geo.bounds(d);
                            d.properties.region_id_se = d.properties.region_id;
                            completaSelect(d.properties);
                        });

                map.on('zoomend', reinicia);
                map.on('zoomstart', function(){muestraOcultaSvg();});
                reinicia(); // Lo inicializa

                // Reposiciona el svg si se realiza un zoom
                function reinicia()
                {
                    var bottomLeft = projectPoint(bounds[0]);
                    var topRight = projectPoint(bounds[1]);

                    svg.attr('width', topRight[0] - bottomLeft[0])
                            .attr('height', bottomLeft[1] - topRight[1])
                            .style('margin-left', bottomLeft[0] + 'px')
                            .style('margin-top', topRight[1] + 'px');

                    g.attr('transform', 'translate(' + -bottomLeft[0] + ',' + -topRight[1] + ')');
                    feature.attr('d', path);
                    muestraOcultaSvg(true);
                }
            });
        };

        // Carga todos los municipios de cierto estado
        var cargaDivisionMunicipal = function()
        {
            var svg = d3.select(map.getPanes().overlayPane).append('svg').attr('id', 'svg-division-municipal');
            var g = svg.append('g').attr('class', 'leaflet-zoom-hide');

            d3.json('/topojson/estado_' + region_id_se + '_division_municipal.json', function (error, collection) {
                var bounds = d3.geo.bounds(topojson.feature(collection, collection.objects['collection']));
                var path = d3.geo.path().projection(projectPoint);

                var feature = g.selectAll('.region')
                        .data(topojson.feature(collection, collection.objects['collection']).features)
                        .enter()
                        .append('path')
                        .attr('class', 'region leaflet-clickable')
                        .on('mouseover', function(d){
                            var name = d.properties.nombre_region;
                            $('#contenedor-nombre-region').html(name);
                        })
                        .on('dblclick', function(d){
                            d.properties.layer = $(this);
                            d.properties.tipo_region = 'municipio';
                            d.properties.bounds = d3.geo.bounds(d);
                            cargaRegion(d.properties);

                            $('#region_municipio').val(d.properties.region_id);  // Selecciona el municipio correspondiente en el select
                        })
                        .each(function(d){
                            d.properties.layer = $(this);
                            d.properties.tipo_region = 'municipio';
                            d.properties.bounds = d3.geo.bounds(d);
                            completaSelect(d.properties);
                        });

                map.on('zoomend', reinicia);
                map.on('zoomstart', function(){muestraOcultaSvg();});

                // Reposition the SVG to cover the features.
                function reinicia()
                {
                    var bottomLeft = projectPoint(bounds[0]);
                    var topRight = projectPoint(bounds[1]);

                    svg.attr('width', topRight[0] - bottomLeft[0])
                            .attr('height', bottomLeft[1] - topRight[1])
                            .style('margin-left', bottomLeft[0] + 'px')
                            .style('margin-top', topRight[1] + 'px');

                    g.attr('transform', 'translate(' + -bottomLeft[0] + ',' + -topRight[1] + ')');
                    feature.attr('d', path);
                    muestraOcultaSvg(true);
                }
            });
        };

        // Carga una sola region en especifico, municipios o estado; reutilizando esta funcion
        // se necesita un obj con prop: region_id, centroide, tipo_region, parent_id
        var cargaRegion = function(prop)
        {
            switch(prop.tipo_region)
            {
                case 'estado':
                    tipo_region_se = 'estados';
                    region_id_se = prop.region_id;
                    $('#svg-division-municipal').remove();
                    cargaDivisionMunicipal();
                    break;
                case 'municipio':
                    tipo_region_se = 'municipios';
                    region_id_se = prop.region_id_se;
                    break;
            }

            map.flyToBounds([prop.bounds[0].reverse(), prop.bounds[1].reverse()]);
            cargaGrupos(prop);
            borraRegistrosAnteriores();
            $('#svg-division-estatal .selecciona-region').attr('class', 'region');
            $('#svg-division-municipal .selecciona-region').attr('class', 'region');
            prop.layer.attr('class', 'selecciona-region');
        };

        // Para validar el correo
        var isValidEmailAddress = function (emailAddress)
        {
            var pattern = /^([a-z\d!#$%&'*+\-\/=?^_`{|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+(\.[a-z\d!#$%&'*+\-\/=?^_`{|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+)*|"((([ \t]*\r\n)?[ \t]+)?([\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|\\[\x01-\x09\x0b\x0c\x0d-\x7f\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))*(([ \t]*\r\n)?[ \t]+)?")@(([a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|[a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF][a-z\d\-._~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]*[a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])\.)+([a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|[a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF][a-z\d\-._~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]*[a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])\.?$/i;
            return pattern.test(emailAddress);
        };
    </script>

<% end %>

<% content_for(:delayedjs) do %>
    <script>
        map = null;
        especies = null;
        especies_con_filtro = null;
        taxon = {};
        layer_obj = {};
        grupo_id_seleccionado = null;
        region_id_se = null;
        tipo_region_se = null;
        CORRESP = eval(<%=raw Estado::CORRESPONDENCIA.to_json %>);  // Es el id del estado, para posteriormente hallar su correspondencia al ID del API
        cargaMapa('map');
        markersLayer = L.markerClusterGroup({chunkedLoading: true, spiderfyDistanceMultiplier: 2, which_layer: 'geoportal'});
        cargaDivisionEstatal();

        $('#contenedor_grupos').on('click', '.grupo_id', function(){
            grupo_id_seleccionado = $(this).attr('grupo_id');
            cargaEspecies();
            return false;
        });

        $('#contenedor_especies').on('click', '.especie_id', function(){
            cargaRegistros($(this).attr('snib_url'));

            taxon["id"] = $(this).attr('especie_id');
            taxon["nombre_comun"] = $(this).next().children()[0].innerText;
            taxon["nombre_cientifico"] = $(this).next().children()[1].innerText;
            return false;
        });

        // Para escoger con las listas
        $('#regiones').on('change', '#region_estado', function(){
            if ($(this).val() == '')
            {
                $('#region_municipio').empty().append('<option value>- - - - - - - -</option>').prop('disabled', true);
                $('#region_anp').empty().append('<option value>- - - - - - - -</option>').prop('disabled', true);

            } else {
                $('#region_municipio').empty().append('<option value>- - - Escoge un municipio - - -</option>');
                $('#region_municipio').prop('disabled', false).attr('parent_id', $(this).val());

                var prop = {};
                prop.bounds = eval($('option:selected', this).attr('bounds'));
                prop.layer = layer_obj[$(this).val()];
                prop.region_id = $(this).val();
                prop.tipo_region = 'estado';
                prop.region_id_se = $(this).val();
                cargaRegion(prop);
            }
        });

        $('#regiones').on('change', '#region_municipio', function(){
            if ($(this).val() == '')
                console.log('esta vacio');
            //$('#region_anp').empty().append('<option value>- - - - - - - -</option>').prop('disabled', true);

            else {
                var prop = {};
                prop.bounds = eval($('option:selected', this).attr('bounds'));
                prop.layer = layer_obj[$(this).val()];
                prop.region_id = $(this).val();
                prop.parent_id = CORRESP[$(this).attr('parent_id')];
                prop.tipo_region = 'municipio';
                prop.region_id_se = $('option:selected', this).attr('region_id_se');
                cargaRegion(prop);
            }

        });

        $( "#toggle-ba-icon" ).click(function() {
            $( "#toggle-ba-content" ).slideToggle( "fast", function() {});
        });

        $('#b_avanzada').on('change', ".checkbox input", function()
        {
            cargaEspecies();
        });

        // JS para la descarga de taxa
        // Para enviar la descarga o que se envie correo
        $(document).on('keyup', '#correo', function(){
            if( !isValidEmailAddress($(this).val()) )
            {
                $(this).parent().addClass("has-error");
                $(this).parent().removeClass("has-success");

                $(this).siblings("span:first").addClass("glyphicon-remove");
                $(this).siblings("span:first").removeClass("glyphicon-ok");
                $('#boton_enviar_descarga').attr('disabled', 'disabled')
            } else {
                $(this).parent().removeClass("has-error");
                $(this).parent().addClass("has-success");
                $(this).siblings("span:first").addClass("glyphicon-ok");
                $(this).siblings("span:first").removeClass("glyphicon-remove");
                $('#boton_enviar_descarga').removeAttr('disabled')
            }
        });

        // Para validar una ultima vez cuando paso la validacion del boton
        $(document).on('click', '#boton_enviar_descarga', function(){
            var correo = $('#correo').val();

            if(isValidEmailAddress(correo))
            {
                $.ajax({
                    url: '/explora-por-region/descarga-taxa',
                    type: 'GET',
                    dataType: "json",
                    data: parametrosCargaEspecies({correo: correo})
                }).done(function(resp) {
                    if (resp.estatus == 1)
                    {
                        $('#estatus_descargar_taxa').empty().html('!La petición se envió correctamente!. Se te enviará un correo con los resultados que seleccionaste.');
                    } else
                        $('#estatus_descargar_taxa').empty().html('Lo sentimos no se pudo procesar tu petición, asegurate de haber anotado correctamente tu correo e inténtalo de nuevo.');

                }).fail(function(){
                    $('#estatus_descargar_taxa').empty().html('Lo sentimos no se pudo procesar tu petición, asegurate de haber anotado correctamente tu correo e inténtalo de nuevo.');
                });

            } else
                $('#estatus_descargar_taxa').empty().html('El correo no parece válido, por favor verifica.');
        });

    </script>
<% end %>

<% content_for(:extracss) do %>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.2.0/dist/leaflet.css" />
    <link rel="stylesheet" href="https://leaflet.github.io/Leaflet.markercluster/dist/MarkerCluster.css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster@1.2.0/dist/MarkerCluster.Default.css" />
    <%= stylesheet_link_tag 'geodatos/Control.FullScreen.css', 'data-turbolinks-track' => true %>
    <%= stylesheet_link_tag "busquedas", media: "all", "data-turbolinks-track" => true %>
    <style>
        #map {
            min-height: 800px;
            width: 100%;
        }
        #especies img{
            max-height: 100px;
        }
        #contenedor_especies h5{
            font-size: small;
        }
        .region, .selecciona-region {
            fill: #e5e5e5;
            opacity: .5;
            pointer-events: all!important;
        }
        .region {
            stroke: black;
            stroke-width:1px;
        }
        .region:hover {
            fill: steelblue;
        }
        .selecciona-region {
            stroke: green;
            stroke-width:3px;
        }
        #contenedor-nombre-region {
            font-weight: bold
        }
        .div-icon-leaflet {
        }
        .feather-ev-icon {
            color: #800000;
            font-size: 2em;
        }
        #toggle-ba-icon {
            font-size: 1.4em;
            cursor: pointer;
        }
        #contenedor_grupos sub {
            bottom: -2.2em;
            left: -3.0em;
        }
    </style>
<% end %>

<div id="contenedor_mapa" class="col-xs-12 col-sm-12 col-md-7 col-lg-8">
  <h4 class="text-left text-success" id="contenedor-nombre-region">Selecciona una región (doble clic)</h4>
  <div id="map"></div>
</div>
<div id="regiones" class="col-xs-12 col-sm-6 col-md-5 col-lg-4">
  <%= render partial: 'tipos_regiones' %>
</div>
<div id="grupos" class="col-xs-12 col-sm-6 col-md-5 col-lg-4">
  <%= render partial: 'grupos' %>
</div>
<div id="grupos" class="col-xs-12 col-sm-6 col-md-5 col-lg-4">
  <%= render partial: 'filtros_busqueda_avanzada' %>
</div>
<div id="especies" class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
  <%= render partial: 'especies' %>
</div>
