<% content_for(:extrajs) do %>
    <script src="//cdnjs.cloudflare.com/ajax/libs/chroma-js/0.5.9/chroma.min.js"></script>
    <script src="http://d3js.org/topojson.v1.min.js"></script>
    <%= javascript_include_tag 'geodatos/d3.v3.min', 'data-turbolinks-track' => true %>
    <script src='http://cdn.leafletjs.com/leaflet/v0.7.7/leaflet.js' data-turbolinks-track='true'></script>
    <%= javascript_include_tag 'geodatos/Control.FullScreen.js', 'data-turbolinks-track' => true %>

    <script data-turbolinks-track="true">
        function addTopoData(topoData){
            topoLayer.addData(topoData);
            topoLayer.addTo(map);
            topoLayer.eachLayer(handleLayer);
        }

        function handleLayer(layer){
            var randomValue = Math.random(),
                    fillColor = colorScale(randomValue).hex();

            layer.setStyle({
                fillColor : fillColor,
                fillOpacity: 1,
                color:'#555',
                weight:1,
                opacity:.5
            });
            layer.on({
                mouseover : enterLayer,
                mouseout: leaveLayer
            });
        }
        function enterLayer(){
            var countryName = this.feature.properties.name;
            $countryName.text(countryName).show();

            this.bringToFront();
            this.setStyle({
                weight:2,
                opacity: 1
            });
        }
        function leaveLayer(){
            $countryName.hide();
            this.bringToBack();
            this.setStyle({
                weight:1,
                opacity:.5
            });
        }

        // Copyright (c) 2013 Ryan Clark
        // https://gist.github.com/rclark/5779673
        L.TopoJSON = L.GeoJSON.extend({
            addData: function(jsonData) {
                if (jsonData.type === "Topology") {
                    for (key in jsonData.objects) {
                        geojson = topojson.feature(jsonData, jsonData.objects[key]);
                        L.GeoJSON.prototype.addData.call(this, geojson);
                    }
                }
                else {
                    L.GeoJSON.prototype.addData.call(this, jsonData);
                }
            }
        });

        var cargaMapa = function (id)
        {
            var place = [23.79162789, -102.04376221];
            var tile_url = 'http://{s}.tile.osm.org/{z}/{x}/{y}.png';

            map = L.map(id, {
                zoomControl: false
            });

            var zoom = L.control.zoom({
                zoomInTitle: 'Acercarse',
                zoomOutTitle: 'Alejarse'
            });

            // https://github.com/brunob/leaflet.fullscreen
            var fullscreen = L.control.fullscreen({
                position: 'topleft',
                title: 'Pantalla completa',
                titleCancel: 'Salir de pantalla completa'
            });

            map.addControl(zoom);
            map.addControl(fullscreen);

            var layer = L.tileLayer(tile_url, {
                attribution: 'OSM',
                noWrap: true
            });

            map.addLayer(layer);
            map.setView(place, 5);  // Default place and zoom

            // variables de topjson
            topoLayer = new L.TopoJSON();
            $countryName = $('.country-name');
            colorScale = chroma
                    .scale(['#D5E3FF', '#003171'])
                    .domain([0,1]);
        };

        var cargaRegion = function(tipo_region, region_id, pagina)
        {
            $.ajax({
                url: '/regiones_mapas/dame-region',
                data: {id: region_id, tipo_region: tipo_region, pagina: pagina}

            }).done(function(resp) {
                if (pagina != undefined)
                    $('.contenedor_regiones').append(resp);
                else
                    $('.contenedor_regiones').empty().append(resp);
            }).fail(function() {
                $('.contenedor_regiones').empty().html('Lo sentimos esa búsqueda no dio ningún resultado');
            });
        };

        var cargaGrupos = function(region_id)
        {
            // Aqui pregunto con el servio de conteo de Abraham, y recibo una respuesta similar, espero
            var grupos = {};
            grupos["Aves"] = 547;
            grupos["Mamíferos"] = 356;
            grupos["Anfibios"] = 234;
            grupos["Arácnidos"] = 134;
            grupos["Reptiles"] = 491;
            grupos["Peces con aletas radiadas"] = 346;
            grupos["Insectos"] = 643;
            grupos["Plantas"] = 531;
            grupos["Hongos"] = 31;
            grupos["Camarones, cangrejos y parintes"] = 46;

            $('#contenedor_grupos').empty();
            $.each(grupos, function(grupo, valor){
                $('#contenedor_grupos').append('<li class="list-group-item"><a href="" class="grupo_id" grupo_id="'+grupo+'">' + grupo + '</a><span class="badge">' + valor + '</span></li>');
            });
        };

        var cargaEspecies = function(elemento, pagina, por_pagina)
        {
            // Aqui pregunto por la segunda parte del servicio de Abraham, esperando una respuesta similar
            var especies = {};
            especies["resultados"] = ["1077REPTI", "12780ANFIB", "12109MAMIF", "938REPTI", "19405GIMNO", "923REPTI",
                "1211REPTI", "491REPTI", "11881MAMIF", "963REPTI", "40198ANGIO", "14269AVES", "571REPTI", "13478AVES", "3659LEPID"];

            // Pregunta por los datos correspondientes a estas especies en nuestra base, todos deberian coincidir en teoria ya que son ids de catalogos
            $.ajax({
                url: '/especies-por-catalogo-id',
                data: {catalogo_id: especies["resultados"]}
            }).done(function(resp) {
                if (resp.estatus)
                {
                    $.each(resp.resultados, function(index, taxon){
                        elemento.parent().append('<li class="list-group-item" snib_url="' + taxon.snib_mapa_json + '">' + taxon.nombre_cientifico + '</li>');
                    });
                }
                else
                    console.log('algo salio mal');

            }).fail(function() {

            });
        };
    </script>

<% end %>

<% content_for(:delayedjs) do %>
    <script>
        // variables del mapa y topojson
        map = null;
        topoLayer = null;
        $countryName = null;
        colorScale = null;

        // variables del scrolling de las regiones
        pagina = 1;
        tipo_region = 'estado';

        cargaMapa('map');
        cargaRegion();

        $('#lista_tipos_regiones li a').on('click', function(){
            tipo_region = $(this).attr('tipo_region');
            cargaRegion(tipo_region);
            pagina = 1;
        });

        $('.contenedor_regiones').on('click', '.region_id', function(){
            $.getJSON('https://gist.githubusercontent.com/moklick/c1cc83e18a6fafd9af81/raw/990220dca05c16bb80041f4306cfb3179aa8d88b/countries.topo.json').done(addTopoData);
            cargaGrupos($(this).attr('region_id'));
            return false;
        });

        $('#contenedor_grupos').on('click', '.grupo_id', function(){
            cargaEspecies($(this));
            return false;
        });

        $('.contenedor_regiones').on('scroll', function(){
            if ($(this).height() + $(this).scrollTop() >= $(this)[0].scrollHeight)
            {
                pagina++;
                cargaRegion(tipo_region , null, pagina);
            }
        });
    </script>
<% end %>

<% content_for(:extracss) do %>
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet/v0.7.7/leaflet.css" />
    <link rel="stylesheet" href="https://api.tiles.mapbox.com/mapbox.js/plugins/leaflet-draw/v0.2.2/leaflet.draw.css" />
    <%= stylesheet_link_tag 'geodatos/MarkerCluster.Default', 'data-turbolinks-track' => true %>
    <%= stylesheet_link_tag 'geodatos/Control.FullScreen.css', 'data-turbolinks-track' => true %>
    <style>
        #map {
            height: 700px;
            width: 100%;
        }
        .contenedor_regiones {
            height: 600px;
            overflow: scroll;
        }
    </style>
<% end %>

<div id="regiones" class="col-md-4">
  <%= render partial: 'tipos_regiones' %>
  <div class="contenedor_regiones"></div>
</div>

<div id="contenedor_mapa" class="col-md-8">
  <div id="map"></div>
</div>

<div id="grupos" class="col-md-12">
  <%= render partial: 'grupos' %>
</div>

<div id="especies" class="col-md-12">
  <%= render partial: 'especies' %>
</div>